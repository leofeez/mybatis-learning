<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.OrderCacheMapper">

    <cache/>

    <resultMap id="OrderMap" type="com.pojo.Order">
        <id column="order_id" property="orderId" javaType="integer" jdbcType="INTEGER"/>
        <result column="order_code" property="orderCode"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!-- association 一对一嵌套结果查询-->
    <resultMap id="UserOrderMap" type="com.pojo.Order" extends="OrderMap">
        <association property="user" javaType="com.pojo.User" columnPrefix="u_">
            <id column="user_id" property="userId" javaType="integer" jdbcType="INTEGER"/>
            <result column="user_name" property="userName"/>
            <result column="create_time" property="createTime"/>
        </association>
    </resultMap>

    <!-- association 一对一嵌套查询-->
    <resultMap id="UserOrderMap2" type="com.pojo.Order" extends="OrderMap">
        <association property="user" column="user_id" fetchType="lazy" select="com.mybatis.mapper.UserMapper.selectByPrimaryKey">
        </association>
    </resultMap>

    <resultMap id="OrderItem" type="com.pojo.OrderItem" extends="OrderMap">

    </resultMap>

    <sql id="Base_Column_List">
        order_id,
        order_code,
        create_time
    </sql>

    <select id="query" resultMap="OrderMap" parameterType="com.pojo.Order">
        select
        <include refid="Base_Column_List"/>
        from `learning`.order o
        <where>
            <if test="orderId != null and orderId !=''">
                AND o.order_id = #{orderId, jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <!-- 在maybatis的配置文件中已经指定了typeAlias，所以这里的resultType只需要直接写类名即可-->
    <select id="findByPrimaryKey" resultType="Order" parameterType="integer">
        select
        <include refid="Base_Column_List"/>
        from learning.`order` u
        where order_id = #{orderId, jdbcType=INTEGER}
    </select>

    <select id="findUserOrderByPrimaryKey" resultMap="UserOrderMap" parameterType="integer">
        select o.order_id,
               o.order_code,
               o.create_time,
               u.user_id u_user_id,
               u.user_name u_user_name
        from learning.`order` o,
             t_user u
        where order_id = #{orderId, jdbcType=INTEGER}
          and u.user_id = o.user_id
    </select>

    <select id="findUserOrderByPrimaryKey2" resultMap="UserOrderMap2" parameterType="integer">
        select o.order_id,
               o.order_code,
               o.create_time,
               o.user_id
        from learning.`order` o
        where order_id = #{orderId, jdbcType=INTEGER}
    </select>

    <insert id="insertUseGeneratedKeys" parameterType="com.pojo.Order" keyProperty="orderId" useGeneratedKeys="true">
        insert into learning.`order` (order_id, order_code, create_time)
        values (#{orderId}, #{orderCode}, #{createTime})
    </insert>

    <insert id="insertBySelectKey" parameterType="com.pojo.Order">
        <!--        <selectKey keyProperty="orderId" keyColumn="order_id" order="BEFORE">-->
        <!--            select LAST_INSERT_ID();-->
        <!--        </selectKey>-->
        insert into learning.`order` (order_id, order_code, create_time) values(#{orderId}, #{orderCode}, #{createTime})
    </insert>
    <insert id="insertBatchGenerateKey" parameterType="com.pojo.Order" useGeneratedKeys="true" keyProperty="orderId">
        insert into learning.`order` (order_id, order_code, create_time)
        values
        <foreach collection="list" separator="," item="order">
            (#{order.orderId}, #{order.orderCode}, #{order.createTime})
        </foreach>

    </insert>

    <insert id="insertBatch" parameterType="com.pojo.Order">
        insert into learning.`order` (order_id, order_code, create_time)
        values
        <foreach collection="list" separator="," item="order">
            (#{order.orderId}, #{order.orderCode}, #{order.createTime})
        </foreach>
    </insert>

    <select id="queryByOrderType" resultMap="OrderMap">
        select
        <include refid="Base_Column_List"/>
        from `learning`.order o
        <where>
            <if test="orderType != null">
                and o.order_type = #{orderType}
            </if>
        </where>
    </select>
</mapper>